var f=(e,s,t)=>new Promise((n,a)=>{var i=r=>{try{g(t.next(r))}catch(l){a(l)}},p=r=>{try{g(t.throw(r))}catch(l){a(l)}},g=r=>r.done?n(r.value):Promise.resolve(r.value).then(i,p);g((t=t.apply(e,s)).next())});import{y as c,L as o,M as d}from"./index-mGrCK8oI.js";const{apiUrl:u=""}=c(),h=({path:e},s="message")=>o.get({url:`/file?path=${e}`},{errorMessageMode:s}),y=(e,s="message")=>o.post({url:"/file",data:e,headers:{"Content-Type":d.JSON}},{errorMessageMode:s,formatDate:!1}),T=(p,...g)=>f(void 0,[p,...g],function*({type:e="",isDir:s="",keywords:t="",startTime:n="",endTime:a=""},i="message"){var l;const r=yield o.get({url:`/file/tree?type=${e}&isDir=${s}&keywords=${t}&startTime=${n}&endTime=${a}`},{errorMessageMode:i});return Array.isArray(r)&&r.length>0?e?r.length===1&&((l=r[0])!=null&&l.children)?r[0].children:[]:r:[]}),$=({path:e},s="message")=>o.get({url:`/file/dir?path=${encodeURIComponent(e)}`},{errorMessageMode:s}),C=(e,s="message")=>o.delete({url:"/file",data:e,headers:{"Content-Type":d.JSON}},{errorMessageMode:s}),w=({path:e},s="message")=>new Promise(t=>f(void 0,null,function*(){const n=yield o.get({url:`/file/download?path=${e}`,responseType:"blob"},{isReturnNativeResponse:!0,errorMessageMode:s});if(n.headers["content-disposition"])t({code:1,blob:n.data});else{const a=new FileReader;a.readAsText(n.data),a.onload=function(){const i=a.result||"{}";t(JSON.parse(i))}}})),N=(e,s="message")=>o.post({url:"/file/rename",data:e,headers:{"Content-Type":d.JSON}},{errorMessageMode:s}),S=({path:e},s="message")=>o.get({url:`/file/info?path=${e}`},{errorMessageMode:s}),b=(e,s="message")=>o.post({url:"/file/move",data:e,headers:{"Content-Type":d.JSON}},{errorMessageMode:s}),J=(e,s="message")=>o.post({url:"/file/create",data:e,headers:{"Content-Type":d.JSON}},{errorMessageMode:s}),O=({params:e,path:s,onUploadProgress:t})=>o.uploadFile({url:`${u}/file/upload?path=${s}`,onUploadProgress:t,timeout:600*1e3},e);export{h as a,$ as b,N as c,C as d,w as e,b as f,T as g,J as h,O as i,S as j,y as s};
