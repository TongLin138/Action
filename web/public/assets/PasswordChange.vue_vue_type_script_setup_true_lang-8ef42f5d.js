import{u as m,_ as g}from"./useForm-8ba0f268.js";import{y as w,c as f,a as _,O as y}from"./index-b98e63e9.js";import{G as P,h,aL as b,a6 as v,aH as N,M as q,as as E,a9 as I,u as k}from"./vendor-339b2486.js";const B={class:"grid grid-cols-1 grid-flow-row-dense md:grid-cols-[450px_1fr] gap-4"},O=P({__name:"PasswordChange",setup(S){const s=w(),n=h(()=>s.getUserInfo),{message:o}=f(),{t:e}=_(),a=[{field:"username",component:"NInput",label:e("setting.identity.username"),required:!0,componentProps:{placeholder:e("setting.identity.placeholder.userName")},defaultValue:n.value.username,rules:[{required:!0,validator(r,t){return t?!0:new Error(e("setting.identity.error.userNameEmpty"))},trigger:["input","blur"]}]},{field:"password",component:"NInput",label:e("setting.identity.newPassword"),required:!0,componentProps:{placeholder:e("setting.identity.placeholder.newPassword"),type:"password",showPasswordOn:"click"},rules:[{required:!0,validator(r,t){return t?!0:new Error(e("setting.identity.error.newPasswordEmpty"))},trigger:["input","blur"]}]},{field:"confirmPassword",component:"NInput",label:e("setting.identity.confirmnewPassword"),required:!0,componentProps:{type:"password",placeholder:e("setting.identity.placeholder.confirmnewPassword"),showPasswordOn:"click"},rules:[{required:!0,validator(r,t){return d().password!==t?new Error(e("setting.identity.error.confirmnewPasswordDiff")):!0},trigger:["input","blur"]}]}],[i,{setFieldsValue:u,getFieldsValue:d,validate:l}]=m({schemas:a,labelPlacement:"top",gridProps:{cols:3,xGap:6},giProps:{span:2},submitButtonText:e("setting.identity.button.confirm")}),c=async r=>{await l(),await y({username:r.username,password:r.password}),o.warning(e("setting.identity.message.msgOk"));try{setTimeout(()=>{s.logout(!0)},2e3)}catch{}};return b(async()=>{u({})}),(r,t)=>{const p=g;return v(),N("div",null,[q(r.$slots,"title"),E("div",B,[I(p,{onRegister:k(i),onSubmit:c},null,8,["onRegister"])])])}}});export{O as _};
